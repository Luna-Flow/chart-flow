package "Luna-Flow/chart-flow"

import(
  "gmlewis/image/color"
)

// Values

// Types and methods
pub(all) struct Fill {
  color : Paint
}

pub(all) type GradientStop (&@color.Color, Double)

pub(all) enum GradientType {
  Linear
  Radial
}

pub(all) enum Paint {
  Solid(&@color.Color)
  Gradient(GradientType, &@color.Color, Position, &@color.Color, Position, Array[GradientStop])
}

pub(all) type Path Array[PathCommand]

pub(all) enum PathCommand {
  Move(Position)
  MoveTo(Position)
  Line(Position)
  LineTo(Position)
  Horizontal(Double)
  HorizontalTo(Position)
  Vertical(Double)
  VerticalTo(Position)
  Quadratic(Position, Position)
  QuadraticTo(Position, Position)
  SmoothQuadratic(Position)
  SmoothQuadraticTo(Position)
  Cubic(Position, Position, Position)
  CubicTo(Position, Position, Position)
  SmoothCubic(Position)
  SmoothCubicTo(Position)
  Arc(Double, Double, Double, Bool, Bool, Position)
  ArcTo(Double, Double, Double, Bool, Bool, Position)
  Close
}

pub(all) type Position (Double, Double)

pub(all) struct Stroke {
  width : Double
  color : Paint
}

// Type aliases

// Traits

